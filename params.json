{"name":"cmuller tools pages","tagline":"About Mercurial, Github, and other tools","body":"# Using github\r\n\r\nPlease find some information below on Github usage.\r\n\r\n## Links\r\n\r\nTo create \"pages\", see https://help.github.com/articles/creating-pages-with-the-automatic-generator (a bootstrap kind of doc).\r\n\r\nFor what is not described below, the [Github bootstrap articles](https://help.github.com/categories/54/articles) are nice and helpful :-)\r\n\r\n## How to use Mercurial with a Github repository\r\n\r\nYou do not need to have Git installed in order to commit and push your changes back to Github. You will need Mercurial, obviously, and also the _Dulwhich_ Python library and the _hg-git_ extension; which installations are covered in the first step below. Once the extension has been enabled, the rest is pretty straightforward for Mercurial users: clone, commit and push as usual.\r\n\r\n### download and install hg-git\r\n\r\n```sh\r\n$ mkdir -p $HOME/.hgext\r\n$ cd $HOME/.hgext\r\n$ wget http://www.samba.org/~jelmer/dulwich/dulwich-0.8.7.tar.gz\r\n$ tar zxvf dulwich-0.8.7.tar.gz\r\n$ rm dulwich-0.8.7.tar.gz\r\n$ cd dulwich-0.8.7\r\n$ ./setup.py build\r\n$ sudo ./setup.py install\r\n[sudo] password for cmuller: \r\nrunning install\r\n[...]\r\n$ cd $HOME/.hgext\r\n$ hg clone https://bitbucket.org/durin42/hg-git\r\n$ cd hg-git/\r\n$ hg update -C 'max(tagged())'\r\n```\r\n\r\n### enable the hg-git extension in $HOME/.hgrc\r\n\r\n```sh\r\n[extensions]\r\nhg-git = $HOME/.hgext/hg-git/hggit\r\n```\r\n\r\n### clone the repository using Mercurial\r\n\r\n```sh\r\n$ hg clone git+ssh://git@github.com:cmuller/test.git\r\n$ cd test\r\n$ hg branch\r\ndefault\r\n$ hg bookmark\r\n * master                    1:0b48f2edc3f7\r\n$ hg pull -u\r\npulling from git+ssh://git@github.com:cmuller/test.git\r\n[\"git-upload-pack 'cmuller/test.git'\"]\r\nno changes found\r\n```\r\n\r\n### commit some changes\r\n\r\n```sh\r\n$ vi README.md \r\n$ hg status\r\nM README.md\r\n$ hg commit -m\"test of commit using hg\"\r\n$ hg status\r\n$ hg outgoing\r\ncomparing with git+ssh://git@github.com:cmuller/test.git\r\n[\"git-receive-pack 'cmuller/test.git'\"]\r\nsearching for changes\r\nchangeset:   2:2ee128a7362a\r\nbookmark:    master\r\ntag:         tip\r\nuser:        Christophe Muller <...>\r\ndate:        [...]\r\nsummary:     test of commit using hg\r\n```\r\n\r\n### push your changes back to Github\r\n\r\n```sh\r\n$ hg push\r\npushing to git+ssh://git@github.com:cmuller/test.git\r\nsearching for changes\r\n[\"git-receive-pack 'cmuller/test.git'\"]\r\n```\r\n\r\nNotes:\r\n\r\n1. it works. see https://github.com/cmuller/test/commit/a0b9ae9aa49118a915f1784894967f8e938ccf9e :-)\r\n2. it is interoperable with the usage of Git on the same repository. E.g.,\r\n\r\n```sh\r\n$ cd /tmp\r\n$ git clone git@github.com:cmuller/test.git\r\n$ cd test\r\n$ git branch\r\n* master\r\n$ git show HEAD\r\ncommit a0b9ae9aa49118a915f1784894967f8e938ccf9e\r\nAuthor: Christophe Muller <...>\r\nDate:   [...]\r\n    test of commit using hg\r\n[...]\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}